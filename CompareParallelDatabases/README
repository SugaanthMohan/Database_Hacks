~ SYNOMPSIS:


	- THE SCRIPT IS MAINLY USED TO COMPARE TWO PARALLEL DATABASES THAT HAVE BEEN SETUP IN DIFFERENT HOSTS. (ITS DIFFERENT HOSTS SINCE YOU CAN USE MYSQL ITSELF TO COMPARE THE DATA IF THEY ARE OF THE SAME HOSTS) 
	- TRADITIONALLY WE COMPARE TWO DATABASES WITH ONLY THE TOTAL NUMBER OF COUNTS IN TABLES, BUT THE ISSUE IS THAT THERE ARE MANY DIFFERENT SCENARIOS WHERE AN ERROR CAN OCCUR
		EXAMPLE : 
		
		- SCENARIO 1 : THE RECORDS MIGHT BE MISSING IN FIRST DATABASES TABLES AND SECOND DATABASES TABLES BUT THEY ARE DIFFERENT RECORDS.
		- SCENARIO 2 : THE RECORDS KEYS ARE PRESENT BUT THERE IS NO PROPER DATA THAT HAS BEEN LOADED.
		- SCENARIO 3 : IF ITS A RELATIONAL TABLE, I.E, A TABLE THAT DEPENDS ON A DIFFERENT TABLE TO HAVE RECORDS AND THE MASTER TABLE DID NOT CONTAIN ANY, YOU ARE TOTALLY GOING TO GET A BUNCH OF ERRORS HERE.
		- SCENARIO 4 : THE TABLE STRUCTURE WAS NOT DEFINED PROPERLY AND THEY CONTAIN SOME DUPLICATE RECORDS WHICH POSE TO HAVING THE CORRECT NUMBER OF RECORDS IN BOTH TABLES.
		- SCENARIO 5 : THE TABLE HAS GARBAGE OR NON-SENSICAL RECORDS THAT POSE TO YOU AS THE RGHT ONES.




~ PYTHON VERSION : PYTHON 3.5



 
~ PYTHON SCRIPT : CompareParallelDatabases.py




~ PYTHON SCRIPT CONFIG : CompareParallelDatabases.ini




~ PYTHON PACKAGES REQUIRED : 
import smtplib
import sys , os as linux
import linecache
import inspect
import argparse
import re as Regex
import pandas as pd
import datetime
import MySQLdb
import configparser
import gc
from time import sleep




~ CONSTRAINTS : 

	- BASICALLY THE TABLE NAMES OF TWO DIFFERENT DATABASES MUST BE THE SAME.
	- YOU WILL NOT GET THE MISMATCH LIST IF THERE IS A COUNT MISMATCH.
	- YOU NEED TO DEFINE THE TABLE STRUCTURE SEPARATELY IN A CSV FILE INCASE YOU THE TABLE STRUCTURE WAS DEFINED INCORRECTLY AND 
	  YOU CANNOT CHANGE IT IF ITS A PRODUCTION DATABASE.





~ YOUR INPUTS : 


	CONFIG FILE (OF BOTH HOSTS):-
	
		DETAILS : 

			- HOSTNAME 
			- DATABASES NAME
			- PORT NO. (IF PRESENT) OTHERWISE LEAVE IT EMPTY
			- MYSQL USER NAME 
			- MYSQL PASSWORD

		CONDITIONS :
			- TEST_COMPATIBILITY    - TRUE/FALSE (YOU CAN TEST QUERY COMPATIBILITY INCASE YOU ARE USING A DIFFERENT )
			- DIFFERED_TABLE_NAMES 	- FALSE (SINCE I HAVE CREATED THE SCRIPT TO HANDLE ONLY BY COMPARING MATCHING TABLE NAMES, WILL BE IMPLEMENTED LATER ON.) 
				[ ALL YOU NEED TO DO IS COMPARE THE TABLE BY ITS STRUCTURE AND FIELD NAMES INCASE THEY HAVE DIFFERENT NAMES].
			- ONE_TO_MANY 		- FALSE (NEEDS TO HAVE DIFFERED TABLE NAMES TO BE IMPLEMENTED)
			- OVERRIDE 		- FALSE (YET TO BE IMPLEMENTED, YOU WILL REQUIRE TO KILL THE QUERY WHICH IS USING THE TABLE, EASY TO IMPLEMENT TOO)


	INSIDE THE SCRIPT:- 
		
		EMAIL ADDRESS :
			- FROM EMAIL ADDRESS FOR YOU EMAIL NOTIFICATION
			- TO EMAIL ADDRESS FOR YOU TO RECIEVE THE EMAIL
		
		SAVE LOCATION :
			- WHERE THE OUTPUT FILES WILL BE SAVED
		
		SCHEMA LOCATION :
			- WHERE YOU CAN OVERRIDE SAVING YOUR SCHEMA FILES INSTEAD OF USING DATABASES TABLE STRUCTURE

		
~ TO RUN
python3.5  CompareParallelDatabases.py --configFile=CompareParallelDatabases.ini
